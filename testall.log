/usr/bin/lli

###### Testing test-add1
./microc.native < tests/test-add1.mc > test-add1.ll
llc test-add1.ll > test-add1.s
llc: test-add1.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-arith1
./microc.native < tests/test-arith1.mc > test-arith1.ll
llc test-arith1.ll > test-arith1.s
llc: test-arith1.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-arith2
./microc.native < tests/test-arith2.mc > test-arith2.ll
llc test-arith2.ll > test-arith2.s
llc: test-arith2.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-arith3
./microc.native < tests/test-arith3.mc > test-arith3.ll
llc test-arith3.ll > test-arith3.s
llc: test-arith3.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-fib
./microc.native < tests/test-fib.mc > test-fib.ll
llc test-fib.ll > test-fib.s
llc: test-fib.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-for1
./microc.native < tests/test-for1.mc > test-for1.ll
llc test-for1.ll > test-for1.s
llc: test-for1.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-for2
./microc.native < tests/test-for2.mc > test-for2.ll
llc test-for2.ll > test-for2.s
llc: test-for2.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-func1
./microc.native < tests/test-func1.mc > test-func1.ll
llc test-func1.ll > test-func1.s
llc: test-func1.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-func2
./microc.native < tests/test-func2.mc > test-func2.ll
llc test-func2.ll > test-func2.s
llc: test-func2.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-func3
./microc.native < tests/test-func3.mc > test-func3.ll
llc test-func3.ll > test-func3.s
llc: test-func3.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-func4
./microc.native < tests/test-func4.mc > test-func4.ll
llc test-func4.ll > test-func4.s
llc: test-func4.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-func5
./microc.native < tests/test-func5.mc > test-func5.ll
llc test-func5.ll > test-func5.s
llc: test-func5.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-func6
./microc.native < tests/test-func6.mc > test-func6.ll
llc test-func6.ll > test-func6.s
llc: test-func6.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-func7
./microc.native < tests/test-func7.mc > test-func7.ll
llc test-func7.ll > test-func7.s
llc: test-func7.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-func8
./microc.native < tests/test-func8.mc > test-func8.ll
llc test-func8.ll > test-func8.s
llc: test-func8.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-gcd
./microc.native < tests/test-gcd.mc > test-gcd.ll
llc test-gcd.ll > test-gcd.s
llc: test-gcd.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-gcd2
./microc.native < tests/test-gcd2.mc > test-gcd2.ll
llc test-gcd2.ll > test-gcd2.s
llc: test-gcd2.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-global1
./microc.native < tests/test-global1.mc > test-global1.ll
llc test-global1.ll > test-global1.s
llc: test-global1.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-global2
./microc.native < tests/test-global2.mc > test-global2.ll
llc test-global2.ll > test-global2.s
llc: test-global2.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-global3
./microc.native < tests/test-global3.mc > test-global3.ll
llc test-global3.ll > test-global3.s
llc: test-global3.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-hello
./microc.native < tests/test-hello.mc > test-hello.ll
llc test-hello.ll > test-hello.s
llc: test-hello.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-if1
./microc.native < tests/test-if1.mc > test-if1.ll
llc test-if1.ll > test-if1.s
llc: test-if1.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-if2
./microc.native < tests/test-if2.mc > test-if2.ll
llc test-if2.ll > test-if2.s
llc: test-if2.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-if3
./microc.native < tests/test-if3.mc > test-if3.ll
llc test-if3.ll > test-if3.s
llc: test-if3.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-if4
./microc.native < tests/test-if4.mc > test-if4.ll
llc test-if4.ll > test-if4.s
llc: test-if4.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-if5
./microc.native < tests/test-if5.mc > test-if5.ll
llc test-if5.ll > test-if5.s
llc: test-if5.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-local1
./microc.native < tests/test-local1.mc > test-local1.ll
llc test-local1.ll > test-local1.s
llc: test-local1.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-local2
./microc.native < tests/test-local2.mc > test-local2.ll
llc test-local2.ll > test-local2.s
llc: test-local2.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-ops1
./microc.native < tests/test-ops1.mc > test-ops1.ll
llc test-ops1.ll > test-ops1.s
llc: test-ops1.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-ops2
./microc.native < tests/test-ops2.mc > test-ops2.ll
llc test-ops2.ll > test-ops2.s
llc: test-ops2.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-printbig
./microc.native < tests/test-printbig.mc > test-printbig.ll
llc test-printbig.ll > test-printbig.s
llc: test-printbig.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-stringdecl
./microc.native < tests/test-stringdecl.mc > test-stringdecl.ll
llc test-stringdecl.ll > test-stringdecl.s
llc: test-stringdecl.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-stringprint
./microc.native < tests/test-stringprint.mc > test-stringprint.ll
llc test-stringprint.ll > test-stringprint.s
llc: test-stringprint.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-stringreturn
./microc.native < tests/test-stringreturn.mc > test-stringreturn.ll
Assertion failed: (isa<X>(Val) && "cast<Ty>() argument of incompatible type!"), function cast, file /private/tmp/llvm@3.7-20170130-95292-rmy5z9/llvm-3.7.1.src/include/llvm/Support/Casting.h, line 237.
./testall.sh: line 63: 48551 Abort trap: 6           ./microc.native < tests/test-stringreturn.mc > test-stringreturn.ll
###### FAILED

###### Testing test-var1
./microc.native < tests/test-var1.mc > test-var1.ll
llc test-var1.ll > test-var1.s
llc: test-var1.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-var2
./microc.native < tests/test-var2.mc > test-var2.ll
llc test-var2.ll > test-var2.s
llc: test-var2.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-while1
./microc.native < tests/test-while1.mc > test-while1.ll
llc test-while1.ll > test-while1.s
llc: test-while1.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing test-while2
./microc.native < tests/test-while2.mc > test-while2.ll
llc test-while2.ll > test-while2.s
llc: test-while2.ll:2:1: error: expected top-level entity
~~~INT~~~
^
###### FAILED

###### Testing fail-assign1
./microc.native < tests/fail-assign1.mc 2> fail-assign1.err >> testall.log
diff -b fail-assign1.err tests/fail-assign1.err > fail-assign1.diff
###### SUCCESS

###### Testing fail-assign2
./microc.native < tests/fail-assign2.mc 2> fail-assign2.err >> testall.log
diff -b fail-assign2.err tests/fail-assign2.err > fail-assign2.diff
###### SUCCESS

###### Testing fail-assign3
./microc.native < tests/fail-assign3.mc 2> fail-assign3.err >> testall.log
diff -b fail-assign3.err tests/fail-assign3.err > fail-assign3.diff
###### SUCCESS

###### Testing fail-dead1
./microc.native < tests/fail-dead1.mc 2> fail-dead1.err >> testall.log
diff -b fail-dead1.err tests/fail-dead1.err > fail-dead1.diff
###### SUCCESS

###### Testing fail-dead2
./microc.native < tests/fail-dead2.mc 2> fail-dead2.err >> testall.log
diff -b fail-dead2.err tests/fail-dead2.err > fail-dead2.diff
###### SUCCESS

###### Testing fail-expr1
./microc.native < tests/fail-expr1.mc 2> fail-expr1.err >> testall.log
diff -b fail-expr1.err tests/fail-expr1.err > fail-expr1.diff
###### SUCCESS

###### Testing fail-expr2
./microc.native < tests/fail-expr2.mc 2> fail-expr2.err >> testall.log
diff -b fail-expr2.err tests/fail-expr2.err > fail-expr2.diff
###### SUCCESS

###### Testing fail-for1
./microc.native < tests/fail-for1.mc 2> fail-for1.err >> testall.log
diff -b fail-for1.err tests/fail-for1.err > fail-for1.diff
###### SUCCESS

###### Testing fail-for2
./microc.native < tests/fail-for2.mc 2> fail-for2.err >> testall.log
diff -b fail-for2.err tests/fail-for2.err > fail-for2.diff
###### SUCCESS

###### Testing fail-for3
./microc.native < tests/fail-for3.mc 2> fail-for3.err >> testall.log
diff -b fail-for3.err tests/fail-for3.err > fail-for3.diff
###### SUCCESS

###### Testing fail-for4
./microc.native < tests/fail-for4.mc 2> fail-for4.err >> testall.log
diff -b fail-for4.err tests/fail-for4.err > fail-for4.diff
###### SUCCESS

###### Testing fail-for5
./microc.native < tests/fail-for5.mc 2> fail-for5.err >> testall.log
diff -b fail-for5.err tests/fail-for5.err > fail-for5.diff
###### SUCCESS

###### Testing fail-func1
./microc.native < tests/fail-func1.mc 2> fail-func1.err >> testall.log
diff -b fail-func1.err tests/fail-func1.err > fail-func1.diff
###### SUCCESS

###### Testing fail-func2
./microc.native < tests/fail-func2.mc 2> fail-func2.err >> testall.log
diff -b fail-func2.err tests/fail-func2.err > fail-func2.diff
###### SUCCESS

###### Testing fail-func3
./microc.native < tests/fail-func3.mc 2> fail-func3.err >> testall.log
diff -b fail-func3.err tests/fail-func3.err > fail-func3.diff
###### SUCCESS

###### Testing fail-func4
./microc.native < tests/fail-func4.mc 2> fail-func4.err >> testall.log
diff -b fail-func4.err tests/fail-func4.err > fail-func4.diff
###### SUCCESS

###### Testing fail-func5
./microc.native < tests/fail-func5.mc 2> fail-func5.err >> testall.log
diff -b fail-func5.err tests/fail-func5.err > fail-func5.diff
###### SUCCESS

###### Testing fail-func6
./microc.native < tests/fail-func6.mc 2> fail-func6.err >> testall.log
diff -b fail-func6.err tests/fail-func6.err > fail-func6.diff
###### SUCCESS

###### Testing fail-func7
./microc.native < tests/fail-func7.mc 2> fail-func7.err >> testall.log
diff -b fail-func7.err tests/fail-func7.err > fail-func7.diff
###### SUCCESS

###### Testing fail-func8
./microc.native < tests/fail-func8.mc 2> fail-func8.err >> testall.log
diff -b fail-func8.err tests/fail-func8.err > fail-func8.diff
###### SUCCESS

###### Testing fail-func9
./microc.native < tests/fail-func9.mc 2> fail-func9.err >> testall.log
diff -b fail-func9.err tests/fail-func9.err > fail-func9.diff
###### SUCCESS

###### Testing fail-global1
./microc.native < tests/fail-global1.mc 2> fail-global1.err >> testall.log
diff -b fail-global1.err tests/fail-global1.err > fail-global1.diff
###### SUCCESS

###### Testing fail-global2
./microc.native < tests/fail-global2.mc 2> fail-global2.err >> testall.log
diff -b fail-global2.err tests/fail-global2.err > fail-global2.diff
###### SUCCESS

###### Testing fail-if1
./microc.native < tests/fail-if1.mc 2> fail-if1.err >> testall.log
diff -b fail-if1.err tests/fail-if1.err > fail-if1.diff
###### SUCCESS

###### Testing fail-if2
./microc.native < tests/fail-if2.mc 2> fail-if2.err >> testall.log
diff -b fail-if2.err tests/fail-if2.err > fail-if2.diff
###### SUCCESS

###### Testing fail-if3
./microc.native < tests/fail-if3.mc 2> fail-if3.err >> testall.log
diff -b fail-if3.err tests/fail-if3.err > fail-if3.diff
###### SUCCESS

###### Testing fail-nomain
./microc.native < tests/fail-nomain.mc 2> fail-nomain.err >> testall.log
diff -b fail-nomain.err tests/fail-nomain.err > fail-nomain.diff
###### SUCCESS

###### Testing fail-return1
./microc.native < tests/fail-return1.mc 2> fail-return1.err >> testall.log
diff -b fail-return1.err tests/fail-return1.err > fail-return1.diff
###### SUCCESS

###### Testing fail-return2
./microc.native < tests/fail-return2.mc 2> fail-return2.err >> testall.log
diff -b fail-return2.err tests/fail-return2.err > fail-return2.diff
###### SUCCESS

###### Testing fail-while1
./microc.native < tests/fail-while1.mc 2> fail-while1.err >> testall.log
diff -b fail-while1.err tests/fail-while1.err > fail-while1.diff
###### SUCCESS

###### Testing fail-while2
./microc.native < tests/fail-while2.mc 2> fail-while2.err >> testall.log
diff -b fail-while2.err tests/fail-while2.err > fail-while2.diff
###### SUCCESS
